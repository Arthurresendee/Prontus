// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using drakaysa.Data;

#nullable disable

namespace drakaysa.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250213175903_Colocando Id único em cards")]
    partial class ColocandoIdúnicoemcards
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("drakaysa.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("TopicoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("TopicoId");

                    b.ToTable("Cards", (string)null);
                });

            modelBuilder.Entity("drakaysa.Models.Dentista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CPF");

                    b.Property<DateTime?>("DataDeNascimento")
                        .HasColumnType("Date")
                        .HasColumnName("DataDeNascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Email");

                    b.Property<string>("Especializacao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Especialização");

                    b.Property<int?>("IdEndereco")
                        .IsRequired()
                        .HasColumnType("INT")
                        .HasColumnName("IdEndereco");

                    b.Property<int?>("Idade")
                        .HasColumnType("INT")
                        .HasColumnName("Idade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Nome");

                    b.Property<string>("NumeroDeRegistro")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar")
                        .HasColumnName("NumeroDeRegistro");

                    b.Property<string>("NumeroDeTelefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar")
                        .HasColumnName("NumeroDeTelefone");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar")
                        .HasColumnName("SobreNome");

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco");

                    b.HasIndex(new[] { "CPF" }, "IX_dentista_CPF")
                        .IsUnique();

                    b.HasIndex(new[] { "Nome" }, "IX_dentista_Nome");

                    b.ToTable("Dentistas", (string)null);
                });

            modelBuilder.Entity("drakaysa.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Bairro");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Cidade");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Descricao");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Estado");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Numero");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Rua");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CEP" }, "IX_Endereco_CEP");

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("drakaysa.Models.Imagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("ImagemBytes")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Imagens");
                });

            modelBuilder.Entity("drakaysa.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasDefaultValue("00000000000")
                        .HasColumnName("CPF");

                    b.Property<DateTime?>("DataDeNascimento")
                        .HasColumnType("datetime")
                        .HasColumnName("DataDeNascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Email");

                    b.Property<int?>("IdDentista")
                        .IsRequired()
                        .HasColumnType("INT")
                        .HasColumnName("IdDentista");

                    b.Property<int?>("IdEndereco")
                        .IsRequired()
                        .HasColumnType("INT")
                        .HasColumnName("IdEndereco");

                    b.Property<string>("Nome")
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Nome");

                    b.Property<string>("NumeroDeTelefone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar")
                        .HasColumnName("NumeroDeTelefone");

                    b.Property<string>("RG")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar")
                        .HasColumnName("RG");

                    b.Property<int?>("Sexo")
                        .HasColumnType("int")
                        .HasColumnName("Sexo");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Telefone");

                    b.Property<string>("Whatsapp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Whatsapp");

                    b.HasKey("Id");

                    b.HasIndex("IdDentista");

                    b.HasIndex("IdEndereco");

                    b.ToTable("Pacientes", (string)null);
                });

            modelBuilder.Entity("drakaysa.Models.PacientePlano", b =>
                {
                    b.Property<int>("IdPlano")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PlanoAtivo")
                        .HasColumnType("BIT")
                        .HasColumnName("PlanoAtivo");

                    b.HasKey("IdPlano", "IdPaciente");

                    b.HasIndex("IdPaciente");

                    b.ToTable("PacientePlanos", (string)null);
                });

            modelBuilder.Entity("drakaysa.Models.PacienteProcedimento", b =>
                {
                    b.Property<int>("IdPaciente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProcedimento")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataProcedimento")
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("DataProcedimento");

                    b.Property<bool>("ProcedimentoRealizado")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPaciente", "IdProcedimento");

                    b.HasIndex("IdProcedimento");

                    b.HasIndex(new[] { "ProcedimentoRealizado" }, "IX_PacienteProcedimento_ProcedimentoRealizado")
                        .IsUnique();

                    b.ToTable("PacienteProcedimentos", (string)null);
                });

            modelBuilder.Entity("drakaysa.Models.Plano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Coberturas")
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Coberturas");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInicial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2025, 2, 13, 14, 59, 2, 915, DateTimeKind.Local).AddTicks(2892))
                        .HasColumnName("DataInicial");

                    b.Property<string>("Descricao")
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("Descricao");

                    b.Property<int>("TipoDePlano")
                        .HasColumnType("INT")
                        .HasColumnName("TipoDePlano");

                    b.Property<string>("Titulo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.ToTable("Planos", (string)null);
                });

            modelBuilder.Entity("drakaysa.Models.Procedimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("Descricao");

                    b.Property<int>("TipoDeProcedimento")
                        .HasColumnType("INT")
                        .HasColumnName("TipoDeProcedimento");

                    b.Property<string>("Titulo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.ToTable("Procedimentos", (string)null);
                });

            modelBuilder.Entity("drakaysa.Models.Topico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TituloTopico")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Topicos", (string)null);
                });

            modelBuilder.Entity("drakaysa.Models.UsuarioDoSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AcessoDeUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("AcessoDeUsuario");

                    b.Property<string>("NomeCompleto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar")
                        .HasColumnName("NomeCompleto");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Senha");

                    b.Property<int?>("TipoDeSexo")
                        .HasColumnType("INT")
                        .HasColumnName("TipoDeSexo");

                    b.Property<int?>("TipoDeUsuario")
                        .HasColumnType("INT")
                        .HasColumnName("TipoDeUsuario");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AcessoDeUsuario" }, "IX_UsuarioDoSistema_AcessoDeUsuario")
                        .IsUnique();

                    b.ToTable("UsuariosDoSistema", (string)null);
                });

            modelBuilder.Entity("drakaysa.Models.Card", b =>
                {
                    b.HasOne("drakaysa.Models.Topico", "Topico")
                        .WithMany("Cards")
                        .HasForeignKey("TopicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topico");
                });

            modelBuilder.Entity("drakaysa.Models.Dentista", b =>
                {
                    b.HasOne("drakaysa.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEndereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("drakaysa.Models.Paciente", b =>
                {
                    b.HasOne("drakaysa.Models.Dentista", "Dentista")
                        .WithMany()
                        .HasForeignKey("IdDentista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("drakaysa.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEndereco")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dentista");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("drakaysa.Models.PacientePlano", b =>
                {
                    b.HasOne("drakaysa.Models.Paciente", "Paciente")
                        .WithMany("PacientePlanos")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("drakaysa.Models.Plano", "Plano")
                        .WithMany("PacientePlanos")
                        .HasForeignKey("IdPlano")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("drakaysa.Models.PacienteProcedimento", b =>
                {
                    b.HasOne("drakaysa.Models.Paciente", "Paciente")
                        .WithMany("PacienteProcedimentos")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("drakaysa.Models.Procedimento", "Procedimento")
                        .WithMany("PacienteProcedimentos")
                        .HasForeignKey("IdProcedimento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Procedimento");
                });

            modelBuilder.Entity("drakaysa.Models.Paciente", b =>
                {
                    b.Navigation("PacientePlanos");

                    b.Navigation("PacienteProcedimentos");
                });

            modelBuilder.Entity("drakaysa.Models.Plano", b =>
                {
                    b.Navigation("PacientePlanos");
                });

            modelBuilder.Entity("drakaysa.Models.Procedimento", b =>
                {
                    b.Navigation("PacienteProcedimentos");
                });

            modelBuilder.Entity("drakaysa.Models.Topico", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
